opDivide /
opAssignment =
opEquals ==
opEqualsAsObjects ===
opMinus -
opMinusMinus --
opAssignMinus -=
opPlus +
opPlusPlus ++
opAssignPlus +=
opNot !
opNotEquals !=
opNotEqualsAsObjects !==
opMultiply *
opRemainder %
opLess <
opLessOrEquals <=
opMore >
opMoreOrEquals >=
opBinAnd &
opBinOr |
opLogicalAnd &&
opLogicalOr ||
opClosedRange ...
opHalfClosedRange ..<
opTry try
opTryOptional try?
opTryForced try!
opTernaryCondIf ?
opTernaryCondElse :
opTernaryCondNil ??
opTypeCheck is
opTypeCast as
opTypeCastConditional as?
opTypeCastForced as!
symbOpeningBracket (
symbClosingBracket )
symbOpeningSquareBracket [
symbClosingSquareBracket ]
symbOpeningCurlyBracket {
symbClosingCurlyBracket }
symbStringLiteral "
symbMultilineStringLiteral """
symbBackSlash \
symbNullChar \0
symbBackslashItself \\
symbHorizontalTab \t
symbLineFeed \n
symbCarriageReturn \r
symbDoubleQuote \"
symbSingleQuote \'
symbUnicodeChar \u
symbExtendedDelimiter #